# Generated by Django 5.0.4 on 2024-04-15 15:29

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('receiptpayment', '0009_rename_bank_bankentry'),
    ]

    operations = [
        migrations.AlterField(
            model_name='bankentry',
            name='bank_name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Name must contain only alphabetic characters', regex='[a-zA-Z]+[a-zA-Z]$')]),
        ),
        migrations.AlterField(
            model_name='bankentry',
            name='brcode',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Field cannot contain special characters', regex='[a-zA-Z0-9]$')], verbose_name='Branch Code'),
        ),
        migrations.AlterField(
            model_name='bankentry',
            name='comcode',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Field cannot contain special characters', regex='[a-zA-Z0-9]$')], verbose_name='Company Code'),
        ),
        migrations.AlterField(
            model_name='bankentry',
            name='gcode',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Field cannot contain special characters', regex='[a-zA-Z0-9]$')], verbose_name='Group Code'),
        ),
        migrations.AlterField(
            model_name='bankentry',
            name='party_name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Name must contain only alphabetic characters', regex='[a-zA-Z]+[a-zA-Z]$')]),
        ),
        migrations.AlterField(
            model_name='bankentry',
            name='ucode',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Field cannot contain special characters', regex='[a-zA-Z0-9]$')], verbose_name='User Code'),
        ),
        migrations.AlterField(
            model_name='receiptpayment',
            name='bank',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Name must contain only alphabetic characters', regex='[a-zA-Z]+[a-zA-Z]$')]),
        ),
        migrations.AlterField(
            model_name='receiptpayment',
            name='brcode',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Field cannot contain special characters', regex='[a-zA-Z0-9]$')], verbose_name='Branch Code'),
        ),
        migrations.AlterField(
            model_name='receiptpayment',
            name='comcode',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Field cannot contain special characters', regex='[a-zA-Z0-9]$')], verbose_name='Company Code'),
        ),
        migrations.AlterField(
            model_name='receiptpayment',
            name='gcode',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Field cannot contain special characters', regex='[a-zA-Z0-9]$')], verbose_name='Group Code'),
        ),
        migrations.AlterField(
            model_name='receiptpayment',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Name must contain only alphabetic characters', regex='[a-zA-Z]+[a-zA-Z]$')]),
        ),
        migrations.AlterField(
            model_name='receiptpayment',
            name='ucode',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Field cannot contain special characters', regex='[a-zA-Z0-9]$')], verbose_name='User Code'),
        ),
    ]
